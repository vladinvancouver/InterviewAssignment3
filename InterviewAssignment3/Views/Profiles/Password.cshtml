@model InterviewAssignment3.ViewModels.UserInfo
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script>
        var pageUnloading = false;
        var userId = '@(Model.UserId)';

        $(window).bind('beforeunload', function () {
            pageUnloading = true;
        });

        (function () {
            $(document).on("click", '#buttonSave', function (event) {
                formProfile_OnSave();
            });
        })();

        $(window).on('load', function (e) {
            $('[data-toggle="tooltip"]').tooltip();

            loadData();
        })

        function loadData() {
            getProfile();
        }

        function getProfile() {
            $.ajax({
                url: '@Url.Action("GetCompleteProfile", "Profiles")' + '?' + $.param({ userId: userId }),
                data: {

                },
                type: 'GET',
                crossDomain: true,
                dataType: 'json',
                cache: false,
                contentType: "application/json",
                success: function (data) {
                    populateFormProfile(data);
                },
                complete: function (jqXHR, textStatus) {

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    if (pageUnloading || jqXHR.statusText == "abort") {
                        return;
                    }
                    if (jqXHR.status === 400) {
                        alert('Error: ' + jqXHR.responseText);
                    } else {
                        alert('Error sending data: ' + errorThrown);
                    }
                }
            });
        }

        function saveProfile(profile) {
            $('#buttonSave').attr('disabled', true);
            $.ajax({
                url: '@Url.Action("SavePasswordProfile", "Profiles")',
                data: JSON.stringify(profile),
                type: 'PUT',
                crossDomain: true,
                dataType: 'text',
                cache: false,
                contentType: "application/json",
                success: function (data) {
                    window.location.href = '@Url.Action("Index", "Profiles")' + '?' + $.param({ userId: userId });
                },
                complete: function (jqXHR, textStatus) {
                    $('#buttonSave').removeAttr("disabled");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    if (pageUnloading || jqXHR.statusText == 'abort') {
                        return;
                    }
                    if (jqXHR.status === 400) {
                        alert('Error: ' + jqXHR.responseText);
                    } else {
                        alert('Error sending data: ' + errorThrown);
                    }
                }
            });
        }

        function populateFormProfile(profile) {
            $('#textBoxCurrentPassword').val('');
            $('#textBoxNewPassword').val('');
            $('#textBoxReEnteredPassword').val('');
        }

        function formProfile_OnSave() {
            let currentPassword = $('#textBoxCurrentPassword').val().trim();
            let newPassword = $('#textBoxNewPassword').val().trim();
            let reEnteredPassword = $('#textBoxReEnteredPassword').val().trim();

            if (currentPassword == '') {
                alert('"Current password" cannot not be left blank.');
                return;
            }

            if (newPassword == '') {
                alert('"New password" cannot not be left blank.');
                return;
            }

            if (newPassword.length > 100) {
                alert('"New password" must not be longer than 100 characters.');
                return;
            }

            if (newPassword != reEnteredPassword) {
                alert('The passwords entered do not match.');
                return;
            }

            let profile = { userId: userId, currentPassword: currentPassword, newPassword: newPassword, reEnteredPassword: reEnteredPassword };

            saveProfile(profile);
        }
    </script>
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="~/">Home</a></li>
    <li class="breadcrumb-item"><a href="~/Profile?user=@(Model.UserId)">Profile</a></li>
    <li class="breadcrumb-item active">Change password</li>
</ol>

<div id="content">
    <p id="existingEmailAddress">To change your password, please enter your current password and your new password.</p>
    <form>
        <div class="modal-body">
            <div class="mb-3">
                <label for="textBoxCurrentPassword">Current password</label>
                <input type="password" class="form-control" id="textBoxCurrentPassword">
            </div>
            <div class="mb-3">
                <label for="textBoxNewPassword">New password</label>
                <input type="password" class="form-control" id="textBoxNewPassword">
            </div>
            <div class="mb-3">
                <label for="textBoxReEnteredPassword">Re-enter new password</label>
                <input type="password" class="form-control" id="textBoxReEnteredPassword">
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" id="buttonSave">Save</button>
            <a href="~/Profiles?userId=@(Model.UserId)" class="btn btn-link">Cancel</a>
        </div>
    </form>
</div>
